// <auto-generated />
using System;
using CarPark.Persistence.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarPark.Persistence.SqlServer.Migrations
{
    [DbContext(typeof(CarParkContext))]
    partial class CarParkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarPark.Models.DefaultFlatRate", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(11,4)");

                    b.HasKey("Key");

                    b.ToTable("DefaultFlatRates");

                    b.HasData(
                        new
                        {
                            Key = new Guid("53e52a31-300a-43e3-81c0-d07e04912289"),
                            Value = 20m
                        });
                });

            modelBuilder.Entity("CarPark.Models.FlatRate", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("CanExtendToFollowingDay")
                        .HasColumnType("bit");

                    b.Property<int>("DayOffsetToMonday")
                        .HasColumnType("int");

                    b.Property<decimal>("EntryHourOffsetFrom")
                        .HasColumnType("decimal(11,4)");

                    b.Property<decimal>("EntryHourOffsetTo")
                        .HasColumnType("decimal(11,4)");

                    b.Property<decimal>("ExitHourOffsetFrom")
                        .HasColumnType("decimal(11,4)");

                    b.Property<decimal>("ExitHourOffsetTo")
                        .HasColumnType("decimal(11,4)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(11,4)");

                    b.HasKey("Key");

                    b.HasIndex("EntryHourOffsetTo");

                    b.ToTable("FlatRates");

                    b.HasData(
                        new
                        {
                            Key = new Guid("729e1681-08ed-4051-badb-043b32ee64ed"),
                            CanExtendToFollowingDay = true,
                            DayOffsetToMonday = 5,
                            EntryHourOffsetFrom = 120m,
                            EntryHourOffsetTo = 144m,
                            ExitHourOffsetFrom = 120m,
                            ExitHourOffsetTo = 144m,
                            Priority = 0,
                            TotalPrice = 10m
                        },
                        new
                        {
                            Key = new Guid("c4081969-5101-4d66-863e-26d3b8334e7c"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 6,
                            EntryHourOffsetFrom = 144m,
                            EntryHourOffsetTo = 168m,
                            ExitHourOffsetFrom = 144m,
                            ExitHourOffsetTo = 168m,
                            Priority = 0,
                            TotalPrice = 10m
                        },
                        new
                        {
                            Key = new Guid("709bb016-f728-4e77-a034-2a57aba74276"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 0,
                            EntryHourOffsetFrom = 0m,
                            EntryHourOffsetTo = 6m,
                            ExitHourOffsetFrom = 0m,
                            ExitHourOffsetTo = 6m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("90e1933e-9ccd-4ceb-a21b-3016376eece0"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 0,
                            EntryHourOffsetFrom = 18m,
                            EntryHourOffsetTo = 24m,
                            ExitHourOffsetFrom = 18m,
                            ExitHourOffsetTo = 30m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("75bb7456-bd7f-4562-bd0f-366bb06d788f"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 1,
                            EntryHourOffsetFrom = 24m,
                            EntryHourOffsetTo = 30m,
                            ExitHourOffsetFrom = 24m,
                            ExitHourOffsetTo = 30m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("bedd0515-f4ad-43a4-b053-4a47f2809b08"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 1,
                            EntryHourOffsetFrom = 42m,
                            EntryHourOffsetTo = 48m,
                            ExitHourOffsetFrom = 42m,
                            ExitHourOffsetTo = 54m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("b9f841b7-966b-4d65-a582-4c2097039af7"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 2,
                            EntryHourOffsetFrom = 48m,
                            EntryHourOffsetTo = 54m,
                            ExitHourOffsetFrom = 48m,
                            ExitHourOffsetTo = 54m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("fd1c8e1d-64ac-4711-9166-787004e298cb"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 2,
                            EntryHourOffsetFrom = 66m,
                            EntryHourOffsetTo = 72m,
                            ExitHourOffsetFrom = 66m,
                            ExitHourOffsetTo = 78m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("b69f8bcd-15cc-4317-8102-84b8b313cbe2"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 3,
                            EntryHourOffsetFrom = 72m,
                            EntryHourOffsetTo = 78m,
                            ExitHourOffsetFrom = 72m,
                            ExitHourOffsetTo = 78m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("d3c39239-db5a-4dee-8ce9-8e07066b2994"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 3,
                            EntryHourOffsetFrom = 90m,
                            EntryHourOffsetTo = 96m,
                            ExitHourOffsetFrom = 90m,
                            ExitHourOffsetTo = 102m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("714d8101-ea70-44d1-baf7-9b81934c347f"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 4,
                            EntryHourOffsetFrom = 96m,
                            EntryHourOffsetTo = 102m,
                            ExitHourOffsetFrom = 96m,
                            ExitHourOffsetTo = 102m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("28c5f0d3-284b-458e-9f5a-a152889403eb"),
                            CanExtendToFollowingDay = true,
                            DayOffsetToMonday = 4,
                            EntryHourOffsetFrom = 114m,
                            EntryHourOffsetTo = 120m,
                            ExitHourOffsetFrom = 114m,
                            ExitHourOffsetTo = 126m,
                            Priority = 0,
                            TotalPrice = 6.5m
                        },
                        new
                        {
                            Key = new Guid("7ba6627f-37ac-4b7e-8ab2-bb834474471c"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 0,
                            EntryHourOffsetFrom = 6m,
                            EntryHourOffsetTo = 9m,
                            ExitHourOffsetFrom = 15.5m,
                            ExitHourOffsetTo = 23.5m,
                            Priority = 0,
                            TotalPrice = 13m
                        },
                        new
                        {
                            Key = new Guid("fc535ed7-553f-4b20-ad30-c5db0e38228e"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 1,
                            EntryHourOffsetFrom = 30m,
                            EntryHourOffsetTo = 33m,
                            ExitHourOffsetFrom = 39.5m,
                            ExitHourOffsetTo = 47.5m,
                            Priority = 0,
                            TotalPrice = 13m
                        },
                        new
                        {
                            Key = new Guid("58899bec-15c7-46de-8cda-c9dedce08f07"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 2,
                            EntryHourOffsetFrom = 54m,
                            EntryHourOffsetTo = 57m,
                            ExitHourOffsetFrom = 63.5m,
                            ExitHourOffsetTo = 71.5m,
                            Priority = 0,
                            TotalPrice = 13m
                        },
                        new
                        {
                            Key = new Guid("c96ec84e-d26e-4e95-b5ff-d5695755c6a4"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 3,
                            EntryHourOffsetFrom = 78m,
                            EntryHourOffsetTo = 81m,
                            ExitHourOffsetFrom = 87.5m,
                            ExitHourOffsetTo = 95.5m,
                            Priority = 0,
                            TotalPrice = 13m
                        },
                        new
                        {
                            Key = new Guid("c2e00b43-d42a-4225-8a84-e73b48ef5db3"),
                            CanExtendToFollowingDay = false,
                            DayOffsetToMonday = 4,
                            EntryHourOffsetFrom = 102m,
                            EntryHourOffsetTo = 105m,
                            ExitHourOffsetFrom = 111.5m,
                            ExitHourOffsetTo = 119.5m,
                            Priority = 0,
                            TotalPrice = 13m
                        });
                });

            modelBuilder.Entity("CarPark.Models.HourlyRate", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("FromHour")
                        .HasColumnType("decimal(11,4)");

                    b.Property<decimal>("ToHour")
                        .HasColumnType("decimal(11,4)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(11,4)");

                    b.HasKey("Key");

                    b.HasIndex("FromHour", "ToHour");

                    b.ToTable("HourlyRates");

                    b.HasData(
                        new
                        {
                            Key = new Guid("c5303ce4-0d4a-402d-9ab1-365d4f48237b"),
                            FromHour = 0m,
                            ToHour = 1m,
                            Value = 5m
                        },
                        new
                        {
                            Key = new Guid("4c656f4d-319d-4d93-b75b-7d2d6e135673"),
                            FromHour = 1m,
                            ToHour = 2m,
                            Value = 10m
                        },
                        new
                        {
                            Key = new Guid("5a9d5a44-2bbd-4184-bda4-9922da4c1dde"),
                            FromHour = 2m,
                            ToHour = 3m,
                            Value = 15m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
